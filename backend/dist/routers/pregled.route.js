"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const pregled_controller_1 = require("../controllers/pregled.controller");
const pregledRouter = express_1.default.Router();
pregledRouter.route('/getBazniPregledByLekar').post((req, res) => new pregled_controller_1.PregledController().getBazniPregledByLekar(req, res));
pregledRouter.route('/getAllBazniPregled').get((req, res) => new pregled_controller_1.PregledController().getAllBazniPregled(req, res));
pregledRouter.route('/getAllPendingPregled').get((req, res) => new pregled_controller_1.PregledController().getAllPendingPregled(req, res));
pregledRouter.route('/getZakazaniPregledByLekar').post((req, res) => new pregled_controller_1.PregledController().getZakazaniPregledByLekar(req, res));
pregledRouter.route('/getPregledByPacijent').post((req, res) => new pregled_controller_1.PregledController().getPregledByPacijent(req, res));
pregledRouter.route('/getBazniPregledByNaziv').post((req, res) => new pregled_controller_1.PregledController().getBazniPregledByNaziv(req, res));
pregledRouter.route('/getBazniPregledBySpecijalizacija').post((req, res) => new pregled_controller_1.PregledController().getBazniPregledBySpecijalizacija(req, res));
pregledRouter.route('/getZakazanPregledNoIzvestaj').get((req, res) => new pregled_controller_1.PregledController().getZakazanPregledNoIzvestaj(req, res));
pregledRouter.route('/getZakazanPregledNoIzvestajByNazivLekarPocetakDatum').post((req, res) => new pregled_controller_1.PregledController().getZakazanPregledNoIzvestajByNazivLekarPocetakDatum(req, res));
pregledRouter.route('/insertPregled').post((req, res) => new pregled_controller_1.PregledController().insertPregled(req, res));
pregledRouter.route('/insertPendingOrBazniPregled').post((req, res) => new pregled_controller_1.PregledController().insertPendingOrBazniPregled(req, res));
pregledRouter.route('/updateNazivByNaziv').post((req, res) => new pregled_controller_1.PregledController().updateNazivByNaziv(req, res));
pregledRouter.route('/updateTrajanjevByNaziv').post((req, res) => new pregled_controller_1.PregledController().updateTrajanjevByNaziv(req, res));
pregledRouter.route('/updateCenaByNaziv').post((req, res) => new pregled_controller_1.PregledController().updateCenaByNaziv(req, res));
pregledRouter.route('/updateSpecijalizacijaByNaziv').post((req, res) => new pregled_controller_1.PregledController().updateSpecijalizacijaByNaziv(req, res));
pregledRouter.route('/updateStatusByNaziv').post((req, res) => new pregled_controller_1.PregledController().updateStatusByNaziv(req, res));
pregledRouter.route('/updateCenaByupdateZakazanByNazivLekarPocetakDatumNaziv').post((req, res) => new pregled_controller_1.PregledController().updateZakazanByNazivLekarPocetakDatum(req, res));
pregledRouter.route('/deletePregled').post((req, res) => new pregled_controller_1.PregledController().deletePregled(req, res));
pregledRouter.route('/updateBazniLekarByNaziv').post((req, res) => new pregled_controller_1.PregledController().updateBazniLekarByNaziv(req, res));
pregledRouter.route('/updateZakazanByNazivLekarPocetakDatum').post((req, res) => new pregled_controller_1.PregledController().updateZakazanByNazivLekarPocetakDatum(req, res));
pregledRouter.route('/updateObavestenByNazivLekarPocetakDatum').post((req, res) => new pregled_controller_1.PregledController().updateObavestenByNazivLekarPocetakDatum(req, res));
pregledRouter.route('/otkaziPregled').post((req, res) => new pregled_controller_1.PregledController().otkaziPregled(req, res));
exports.default = pregledRouter;
//# sourceMappingURL=pregled.route.js.map